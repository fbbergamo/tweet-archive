<style>
#cal-heatmap,  #domainDynamicDimension-previous,  #domainDynamicDimension-next{
  float: left
}

 #domainDynamicDimension-previous,  #domainDynamicDimension-next {
   margin: 50px 10px;
 }
.calendar-heatmap__block {
  display: inline-block;
}
</style>
<script src="https://cdn.jsdelivr.net/gh/holtzy/D3-graph-gallery@master/LIB/d3.layout.cloud.js"></script>

<h1>Bolsonaro Tweets - Arquivo - <%= Tweet.count %> Tweets </h1>
<p>Objetivo: Monitorar e analisar os tweets publicados pelo atual presidente Jair Bolsonaro garantindo que o histórico de comunicação não seja removido/alterado e trazendo mais visibilidade para população de como e quando o presidente se comunica garantindo os direitos adiquiridos pela Lei de Acesso à Informação - <a href="http://www.planalto.gov.br/ccivil_03/_ato2011-2014/2012/Decreto/D7724.htm">Lei nº 12.527/2011</a></p>
<p>Todos os gráficos estão desconsiderando os retweets</p>
<h2>Tweets por dia</h2>
<div class="calendar-heatmap__block">
  <button class="btn" id="domainDynamicDimension-previous">Voltar</button>
  <div id="cal-heatmap"></div>
  <button class="btn" id="domainDynamicDimension-next">Avançar</button>
</div>
<div id="my_dataviz"></div>


<h2>Tweets por mês</h2>
<div id="tweets_per_month"></div>

<h2>Interações por mês</h2>
<div id="sums_per_month"></div>

<h2>Tipo de midia</h2>
<div id="media_per_month"></div>

<h2>Tweets por horario</h2>
<div id="hours_ranking"></div>

<h2>Tweets por dia da semana</h2>
<div id="day_of_week_ranking"></div>



<h2>Palavras mais utilizadas</h2>
<div id="words_any"></div>

<h2>Verbos mais utilizadas</h2>
<div id="words_verb"></div>

<h2>Adjetivos mais utilizadas</h2>
<div id="words_adj"></div>

<h2>Adverbios mais utilizadas</h2>
<div id="words_adv"></div>

<h2>Substantivos mais utilizadas</h2>
<div id="words_noun"></div>

<h2>Entidades mais menciondas</h2>
<div id="entities_ranking"></div>


<h2>Lugares mais menciondas</h2>
<div id="entities_place_ranking"></div>

<h2>Pessoas mais menciondas</h2>
<div id="entities_person_ranking"></div>

<h2>Organizações mais menciondas</h2>
<div id="entities_organization_ranking"></div>

<h2>Eventos mais menciondas</h2>
<div id="entities_event_ranking"></div>


<div class="metions-ranking__block">
  <h2>Análise de sentimentos</h2>

  <ol>
    <% @sentimental_ranking.each do |tag| %>
      <li><%= tag[0]%> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>

<h2>Análise de sentimentos por mês</h2>
<div id="sentimental_per_month"></div>

<h2>Análise de sentimentos por Mês score médio</h2>
<div id="sentimental_per_month_score"></div>


<div class="metions-ranking__block">
  <h2>Menções mais utilizadas</h2>
  <ol>
    <% @mentions.each do |tag| %>
      <li><%= tag[0]%> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>

<div class="metions-ranking__block">
  <h2>Ranking Retweets</h2>
  <ol>
    <% @reteweet_ranking.each do |tag| %>
      <li><%= tag[0]%> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>

<div class="metions-ranking__block">
  <h2>Ranking Reply</h2>
  <ol>
    <% @reply_ranking.each do |tag| %>
      <li><%= tag[0]%> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>

<div class="metions-ranking__block">
  <h2>Ranking Place</h2>
  <ol>
    <% @place_ranking.each do |tag| %>
      <li><%= tag[0]%> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>

<div class="metions-ranking__block">
  <h2>Ranking Dispositivo</h2>
  <ol>
    <% @source_ranking.each do |tag| %>
      <li><%= strip_tags(tag[0]) %> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>



<div class="metions-ranking__block">
  <h2>Domains mais linkados</h2>
  <ol>
    <% @domains_ranking.each do |tag| %>
      <li><%= strip_tags(tag[0]) %> - <%= tag[1] %></li>
    <% end %>
  </ol>
</div>


<a href="https://github.com/fbbergamo/tweet-archive"> <3 Github</a>
<br>
<a href="https://s3-sa-east-1.amazonaws.com/tweets-archive-dump/dump.json.gz" target="blank">Dump Tweets</a>


<script type="text/javascript">
	var cal = new CalHeatMap();
	cal.init({
    data: <%= raw @tweets_per_day.transform_keys{|x| x.to_time.to_f if x.present?}.select{|x| x.present? }.to_json %>,
    range: 3,
    legend: [5,10,15,20,25],
    itemName: ["tweet", "tweets"],
    rowLimit: 7,
    domain: "month",
    subDomain: "x_day",
    domainLabelFormat: "%m-%Y",
    cellSize: 30,
    start: new Date(2019, 0), // January, 1st 2000
    nextSelector: "#domainDynamicDimension-next",
    previousSelector: "#domainDynamicDimension-previous"
  });

  // Script
var chart = bb.generate({
  data: {
      x: "x",
      columns: [
         ["x",  <%= raw @tweets_per_month.map{|x|  x[0].to_date.to_s.inspect if x[0].present? }.compact.join(',') %>],
         ["QUANTIDADE",  <%= raw @tweets_per_month.map{|x| x[1] }.join(',')%>]
      ]
    },
    axis: {
      x: {
        type: "timeseries",
        tick: {
          format: "%Y-%m-%d"
        }
      }
    },
  zoom: {
    enabled: {
      type: "drag"
    }
  },
    bindto: "#tweets_per_month"
  });

  // Script
  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @hours_ranking.map{|x| x[0].inspect }.join(',')%>],
    ["Tweets", <%= raw @hours_ranking.map{|x| x[1] }.join(',')%>]
      ],
      type: "bar"
    },
    bindto: "#hours_ranking"
  });

  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @day_of_week_ranking.map{|x| x[0].inspect }.join(',')%>],
    ["Tweets", <%= raw @day_of_week_ranking.map{|x| x[1] }.join(',')%>]
      ],
      type: "bar"

    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#day_of_week_ranking"
  });

  // Script
  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
  	["x", <%= raw @words.map{|x| x['text'].inspect }.join(',')%>],
  	["Palavra", <%= raw @words.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#words_any"
  });


  // Script
  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @words_adj.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @words_adj.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#words_adj"
  });

  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @words_adv.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @words_adv.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#words_adv"
  });

  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @words_noun.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @words_noun.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#words_noun"
  });


  // Script
  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @entities_ranking.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @entities_ranking.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#entities_ranking"
  });


  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @entities_place_ranking.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @entities_place_ranking.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#entities_place_ranking"
  });



    var chart = bb.generate({
      data: {
        x: "x",
        columns: [
      ["x", <%= raw @entities_person_ranking.map{|x| x['text'].inspect }.join(',')%>],
      ["Palavra", <%= raw @entities_person_ranking.map{|x| x['count'] }.join(',')%>]
        ],
        type: "bar"
      },
      axis: {
        x: {
          type: "category",
          tick: {
            rotate: 75,
            multiline: false,
            tooltip: true
          },
          height: 130
        }
      },
      bindto: "#entities_person_ranking"
    });

    var chart = bb.generate({
      data: {
        x: "x",
        columns: [
      ["x", <%= raw @entities_organization_ranking.map{|x| x['text'].inspect }.join(',')%>],
      ["Palavra", <%= raw @entities_organization_ranking.map{|x| x['count'] }.join(',')%>]
        ],
        type: "bar"
      },
      axis: {
        x: {
          type: "category",
          tick: {
            rotate: 75,
            multiline: false,
            tooltip: true
          },
          height: 130
        }
      },
      bindto: "#entities_organization_ranking"
    });

    var chart = bb.generate({
      data: {
        x: "x",
        columns: [
      ["x", <%= raw @entities_event_ranking.map{|x| x['text'].inspect }.join(',')%>],
      ["Palavra", <%= raw @entities_event_ranking.map{|x| x['count'] }.join(',')%>]
        ],
        type: "bar"
      },
      axis: {
        x: {
          type: "category",
          tick: {
            rotate: 75,
            multiline: false,
            tooltip: true
          },
          height: 130
        }
      },
      bindto: "#entities_event_ranking"
    });


// Script
  var chart = bb.generate({
    data: {
      x: "x",
      columns: [
    ["x", <%= raw @words_verb.map{|x| x['text'].inspect }.join(',')%>],
    ["Palavra", <%= raw @words_verb.map{|x| x['count'] }.join(',')%>]
      ],
      type: "bar"
    },
    axis: {
      x: {
        type: "category",
        tick: {
          rotate: 75,
          multiline: false,
          tooltip: true
        },
        height: 130
      }
    },
    bindto: "#words_verb"
  });


  // Script
var chart = bb.generate({
  data: {
      x: "x",
      columns: [
  	     ["x",  <%= raw @sentimental_per_month.map{|x| x[:date].inspect if x[:date].present?  }.compact.join(',') %>],
    	   ["POSITIVO",  <%= raw @sentimental_per_month.map{|x| x[:count_postive] }.join(',')%>],
         ["NEUTRAL",  <%= raw @sentimental_per_month.map{|x| x[:count_neutral] }.join(',')%>],
         ["NEGATIVE",  <%= raw @sentimental_per_month.map{|x| x[:count_negative] }.join(',')%>]
      ]
    },
    axis: {
      x: {
        type: "timeseries",
        tick: {
          format: "%Y-%m-%d"
        }
      }
    },
  zoom: {
    enabled: {
      type: "drag"
    }
  },
    bindto: "#sentimental_per_month"
  });

  var chart = bb.generate({
    data: {
        x: "x",
        columns: [
    	     ["x",  <%= raw @sums_per_month.map{|x| Date.parse(x["month"]).to_s.inspect if x["month"].present?  }.compact.join(',') %>],
      	   ["retweets",  <%= raw @sums_per_month.map{|x| x["retweet_count"] }.join(',')%>],
           ["replies",  <%= raw @sums_per_month.map{|x| x["reply_count"] }.join(',')%>],
           ["favorites",  <%= raw @sums_per_month.map{|x| x["favorite_count"] }.join(',')%>]
        ]
      },
      axis: {
        x: {
          type: "timeseries",
          tick: {
            format: "%Y-%m-%d"
          }
        }
      },
    zoom: {
      enabled: {
        type: "drag"
      }
    },
      bindto: "#sums_per_month"
    });


    var chart = bb.generate({
      data: {
          x: "x",
          columns: [
             ["x",  <%= raw @media_per_month.map{|x| x[:date].inspect if x[:date].present?  }.compact.join(',') %>],
             ["Video",  <%= raw @media_per_month.map{|x| x[:count_video] }.join(',')%>],
             ["Fotos",  <%= raw @media_per_month.map{|x| x[:count_photo] }.join(',')%>]
          ]
        },
        axis: {
          x: {
            type: "timeseries",
            tick: {
              format: "%Y-%m-%d"
            }
          }
        },
      zoom: {
        enabled: {
          type: "drag"
        }
      },
        bindto: "#media_per_month"
      });


  var chart = bb.generate({
    data: {
        x: "x",
        columns: [
    	     ["x",  <%= raw @sentimental_per_month.map{|x| x[:date].inspect if x[:date].present?  }.compact.join(',') %>],
      	   ["SCORE",  <%= raw @sentimental_per_month.map{|x| x[:score] }.join(',')%>],
        ]
      },
      axis: {
        x: {
          type: "timeseries",
          tick: {
            format: "%Y-%m"
          }
        }
      },
    zoom: {
      enabled: {
        type: "drag"
      }
    },
      bindto: "#sentimental_per_month_score"
    });

// List of words
var myWords =  <%= raw @words.map{|x| { text: x['text'], size: (x['count'] * 10).to_s } }.to_json %>;

// set the dimensions and margins of the graph
var margin = {top: 10, right: 10, bottom: 10, left: 10},
    width = 450 - margin.left - margin.right,
    height = 450 - margin.top - margin.bottom;

// append the svg object to the body of the page
var svg = d3.select("#my_dataviz").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

// Constructs a new cloud layout instance. It run an algorythm to find the position of words that suits your requirements
// Wordcloud features that are different from one word to the other must be here
var layout = d3.layout.cloud()
  .size([width, height])
  .words(myWords.map(function(d) { return {text: d.text, size:d.size}; }))
  .padding(5)        //space sbetween words
  .rotate(function() { return ~~(Math.random() * 2) * 90; })
  .fontSize(function(d) { return d.size; })      // font size of words
  .on("end", draw);
layout.start();

// This function takes the output of 'layout' above and draw the words
// Wordcloud features that are THE SAME from one word to the other can be here
function draw(words) {
  svg
    .append("g")
      .attr("transform", "translate(" + layout.size()[0] / 2 + "," + layout.size()[1] / 2 + ")")
      .selectAll("text")
        .data(words)
      .enter().append("text")
        .style("font-size", function(d) { return d.size; })
        .style("fill", "#69b3a2")
        .attr("text-anchor", "middle")
        .style("font-family", "Impact")
        .attr("transform", function(d) {
          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
        })
        .text(function(d) { return d.text; });
}

</script>
